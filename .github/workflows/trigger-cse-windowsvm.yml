# .SYNOPSIS
#       GitHub Action Workflow for Hardening Windows Virtual Machine server.
# .DESCRIPTION
#       Github Action workflow for executing Hardening script for Windows VM (2016, 2019 & 2022 SKUs) via Custom Extension Script.
#       This solution performs below tasks for hardening the Windows Virtual Machine server:
#         a.) Triggers Hardening Github action workflow on 'push' to 'main' branch
#         b.) Secure string in GitHub action workflow is stored & fetched from GitHub Secrets
#         c.) The GitHub action workflow triggers the main 'CIS_WindowsServer_Hardening_InstallCEx.ps1' hardening script.
#             'CIS_WindowsServer_Hardening_InstallCEx.ps1' is the main script which triggers all other modular scripts for all VMs in loop.
#         e.) The GitHub action workflow triggers the script/action to delete all installed 'Custom Script Extension' on each VM
#         f.) The GitHub action workflow triggers the script/action to delete the temporary resource group
#   .NOTES
#       Version: 0.2
#       Created By: Anil Kumar
#       Creation Date: 25 May 2022
#       Modified By: Anil Kumar
#       Modified Date: 10 Aug 2022

name: Hardening Windows Server Virtual Machine 

# Controls when the workflow will run
on:
  #Triggers the workflow on push for the main branch
  push:
    branches: [ main ]
  
  # Enables the setting to run this workflow manually from the Github Actions tab in browser
  workflow_dispatch:

env:
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  STORAGE_ACCOUNT_NAME_PREFIX: sa001
  STORAGE_CONTAINER_NAME_PREFIX: sc001
  STORAGE_ACCOUNT_RG_NAME: rg-tmp-${{ github.run_id }}-${{ github.run_attempt }}
  STORAGE_ACCOUNT_RG_LOCATION: westeurope
  NETWORK_SECURITY_RULE_NAME_PREFIX: Deny-Out-Internet
  PRIVATE_DNS_ZONE_NAME: 'privatelink.blob.core.windows.net'
  CUSTOM_SCRIPT_EXTENSION_NAME_PREFIX: 'cse-harden-'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "hardening-vm"
  hardening-vm:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        vm: [{"name":"vmctadevwe132", "location":"westeurope", "rg":"rg-cta-dev-we-132"},{"name":"vmctaprodwe017", "location":"westeurope", "rg":"rg-cta-prod-we-017"}]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout Repos
        uses: actions/checkout@v3

      - name: Login via Az module
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
      
      - name: Execute Hardening for Windows VMs
        uses: azure/powershell@v1
        id: hardeningstep
        with:
          inlineScript: |
            ./CIS_WindowsServer_Hardening_InstallCEx.ps1 -virtualMachineName ${{ matrix.vm['name'] }} -virtualMachineLocation ${{ matrix.vm['location'] }} -virtualMachineResourceGroup ${{ matrix.vm['rg'] }} -storageAccountNamePrefix ${{ env.STORAGE_ACCOUNT_NAME_PREFIX }} -storageContainerNamePrefix ${{ env.STORAGE_CONTAINER_NAME_PREFIX }} -rgNameStorageAccount ${{ env.STORAGE_ACCOUNT_RG_NAME }} -rgLocationStorageAccount ${{ env.STORAGE_ACCOUNT_RG_LOCATION }} -networkSecurityRuleNamePrefix ${{ env.NETWORK_SECURITY_RULE_NAME_PREFIX }} -privateDNSZoneName ${{ env.PRIVATE_DNS_ZONE_NAME }} -cseName ${{ env.CUSTOM_SCRIPT_EXTENSION_NAME_PREFIX }}${{ matrix.vm['name'] }}
          azPSVersion: "latest"

      - name: Check temporary RG name returned from PS script
        uses: azure/powershell@v1
        with:
          inlineScript: |
            Write-Output 'Temporary RG Name from Script :' ${{ steps.hardeningstep.outputs._rgName }}            
          azPSVersion: "latest"

      - name: Remove Custom Extension Script for Windows Hardening
        if: always()
        uses: azure/powershell@v1
        with:
          inlineScript: |
            ./CIS_WindowsServer_Hardening_RemoveCEx.ps1 -virtualMachineName ${{ matrix.vm['name'] }} -virtualMachineResourceGroup ${{ matrix.vm['rg'] }} -cseName ${{ env.CUSTOM_SCRIPT_EXTENSION_NAME_PREFIX }}${{ matrix.vm['name'] }}
          azPSVersion: "latest"
      
      - name: Delete Temporary Resource Group (hosting Storage Accounts, Private Endpoints & Private DNS Zone)
        if: always()
        uses: azure/powershell@v1
        with:
          inlineScript: |
            ./UtilityScripts/DeleteResourceGroup.ps1 -resourceGroupName ${{ steps.hardeningstep.outputs._rgName }}
          azPSVersion: "latest"
